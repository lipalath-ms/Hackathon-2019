{
	"name": "required_data_flow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "HC01CareerStage",
						"type": "DatasetReference"
					},
					"name": "HC01CareerStage"
				},
				{
					"dataset": {
						"referenceName": "HC01Employee",
						"type": "DatasetReference"
					},
					"name": "HC01Employee"
				},
				{
					"dataset": {
						"referenceName": "HC01EmployeePosition",
						"type": "DatasetReference"
					},
					"name": "HC01EmployeePosition"
				},
				{
					"dataset": {
						"referenceName": "HC01OrgBusiness",
						"type": "DatasetReference"
					},
					"name": "HC01OrgBusiness"
				},
				{
					"dataset": {
						"referenceName": "HC01Person",
						"type": "DatasetReference"
					},
					"name": "HC01Person"
				},
				{
					"dataset": {
						"referenceName": "HC01PersonCareerStage",
						"type": "DatasetReference"
					},
					"name": "HC01PersonCareerStage"
				},
				{
					"dataset": {
						"referenceName": "HC01ReportsToHierarchyTree",
						"type": "DatasetReference"
					},
					"name": "HC01ReportsToHierarchyTree"
				},
				{
					"dataset": {
						"referenceName": "HCH01JobFunction",
						"type": "DatasetReference"
					},
					"name": "HCH01JobFunction"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_SQL_Test",
						"type": "DatasetReference"
					},
					"name": "Output"
				}
			],
			"transformations": [
				{
					"name": "HC01CareerStageProjection"
				},
				{
					"name": "HC01EmployeeProjection"
				},
				{
					"name": "JoinedStream"
				},
				{
					"name": "Metrics"
				}
			],
			"script": "source(output(\n\t\tActiveInd as string,\n\t\tCareerStageDesc as string,\n\t\tCareerStageName as string,\n\t\tCareerStageNumber as integer,\n\t\tFromDate as timestamp,\n\t\tToDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> HC01CareerStage\nsource(output(\n\t\tAcquiredCompanyHireDate as timestamp,\n\t\tApplicantCode as string,\n\t\tBusinessCardTitleName as string,\n\t\tCompanyStartDate as timestamp,\n\t\tCompressedWorkweekInd as string,\n\t\tCountryStartDate as timestamp,\n\t\tEmployeePhotoConsentInd as string,\n\t\tFirstMSJVHireDate as timestamp,\n\t\tFirstRegularHireDate as timestamp,\n\t\tFlexTimeInd as string,\n\t\tInternCoopEstEndDate as timestamp,\n\t\tInternCoopEstEndReminderDate as timestamp,\n\t\tLastDayWorkedDate as timestamp,\n\t\tMobilePhoneOneNbr as string,\n\t\tMobilePhoneTwoNbr as string,\n\t\tMonthsAsManager as integer,\n\t\tMonthsAtMS as integer,\n\t\tMostRecentHireDate as timestamp,\n\t\tMSRegularOrgSize as integer,\n\t\tPagerOneNbr as string,\n\t\tPayrollIdNbr as string,\n\t\tPayScaleAreaCode as string,\n\t\tPBEEstimatedEndDate as timestamp,\n\t\tPBEEstimatedEndReminderDate as timestamp,\n\t\tPersonnelNumber as integer,\n\t\tPrimaryContactInd as string,\n\t\tRetailBenefitsEligibilityDate as timestamp,\n\t\tServiceAwardDate as timestamp,\n\t\tTeleworkerDaysWorkedAtHome as integer,\n\t\tTerminationDate as timestamp,\n\t\tVacationServiceDate as timestamp,\n\t\tWorkScheduleRuleName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> HC01Employee\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> HC01EmployeePosition\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> HC01OrgBusiness\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> HC01Person\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> HC01PersonCareerStage\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> HC01ReportsToHierarchyTree\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> HCH01JobFunction\nHC01CareerStage select(mapColumn(\n\t\tCareerStageNumber\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> HC01CareerStageProjection\nHC01Employee select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> HC01EmployeeProjection\nHC01CareerStageProjection, HC01EmployeeProjection join(HC01PersonCareerStageProjection@CareerStageNumber == HC01CareerStageProjection@CareerStageNumber,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> JoinedStream\nJoinedStream aggregate(groupBy(CareerStageName = CareerStageName),\n\tCount = countDistinct(HC01PersonCareerStageProjection@CareerStageNumber)) ~> Metrics\nMetrics sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tCareerStageName,\n\t\tCount\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Output"
		}
	}
}